// <auto-generated />
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Wrpg.Shared.Database;

#nullable disable

namespace Wrpg.Shared.Database.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Wrpg.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("Id"));

                    b.Property<string>("IdentityId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("IdentityProvider")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("Id");

                    b.HasIndex("Nickname")
                        .IsUnique();

                    b.HasIndex("IdentityProvider", "IdentityId")
                        .IsUnique();

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("Wrpg.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.ComplexProperty<Dictionary<string, object>>("Stats", "Wrpg.Character.Stats#Stats", b1 =>
                        {
                            b1.IsRequired();

                            b1.ComplexProperty<Dictionary<string, object>>("Attributes", "Wrpg.Character.Stats#Stats.Attributes#Attributes", b2 =>
                                {
                                    b2.IsRequired();

                                    b2.Property<int>("Constitution")
                                        .HasColumnType("integer");

                                    b2.Property<int>("Dexterity")
                                        .HasColumnType("integer");

                                    b2.Property<int>("Intelligence")
                                        .HasColumnType("integer");

                                    b2.Property<int>("Level")
                                        .HasColumnType("integer");

                                    b2.Property<int>("Spirit")
                                        .HasColumnType("integer");

                                    b2.Property<int>("Strength")
                                        .HasColumnType("integer");
                                });

                            b1.ComplexProperty<Dictionary<string, object>>("Resources", "Wrpg.Character.Stats#Stats.Resources#Resources", b2 =>
                                {
                                    b2.IsRequired();

                                    b2.Property<int>("Energy")
                                        .HasColumnType("integer");

                                    b2.Property<int>("Health")
                                        .HasColumnType("integer");
                                });
                        });

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Characters");
                });
#pragma warning restore 612, 618
        }
    }
}
